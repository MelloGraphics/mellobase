{"version":3,"file":"app-screens/view.js","mappings":";;;;AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EACnD,MAAMC,MAAM,GAAGF,QAAQ,CAACG,gBAAgB,CAAC,iCAAiC,CAAC;EAE3ED,MAAM,CAACE,OAAO,CAAEC,KAAK,IAAK;IACzB,MAAMC,OAAO,GAAGD,KAAK,CAACF,gBAAgB,CAAC,yCAAyC,CAAC;IACjF,IAAIG,OAAO,CAACC,MAAM,KAAK,CAAC,EAAE;;IAE1B;IACAD,OAAO,CAACF,OAAO,CAAC,CAACI,MAAM,EAAEC,KAAK,KAAK;MAClCD,MAAM,CAACE,SAAS,CAACC,MAAM,CAAC,WAAW,EAAE,aAAa,CAAC;MACnD,IAAIF,KAAK,KAAK,CAAC,EAAE;QAChBD,MAAM,CAACE,SAAS,CAACE,GAAG,CAAC,WAAW,CAAC;MAClC,CAAC,MAAM;QACNJ,MAAM,CAACE,SAAS,CAACE,GAAG,CAAC,aAAa,CAAC;MACpC;IACD,CAAC,CAAC;;IAEF;IACA,MAAMC,QAAQ,GAAGb,QAAQ,CAACG,gBAAgB,CAAC,mBAAmB,CAAC;IAC/D,MAAMW,eAAe,GAAG;MACvBC,IAAI,EAAE,IAAI;MACVC,UAAU,EAAE;IACb,CAAC;IAED,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;MACtDA,OAAO,CAACf,OAAO,CAAEgB,KAAK,IAAK;QAC1B,IAAIA,KAAK,CAACC,cAAc,EAAE;UACzB,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAACC,YAAY,CAAC,iBAAiB,CAAC;UACxDlB,OAAO,CAACF,OAAO,CAAEI,MAAM,IAAK;YAC3B,MAAMiB,SAAS,GAAGjB,MAAM,CAACgB,YAAY,CAAC,UAAU,CAAC;YACjDhB,MAAM,CAACE,SAAS,CAACC,MAAM,CAAC,WAAW,EAAE,aAAa,CAAC;YACnD,IAAGc,SAAS,KAAKH,GAAG,EAAE;cACrBd,MAAM,CAACE,SAAS,CAACE,GAAG,CAAC,WAAW,CAAC;YAClC,CAAC,MAAM;cACNJ,MAAM,CAACE,SAAS,CAACE,GAAG,CAAC,aAAa,CAAC;YACpC;UACD,CAAC,CAAC;QACH;MACD,CAAC,CAAC;IACH,CAAC,EAAEE,eAAe,CAAC;IAEnBD,QAAQ,CAACT,OAAO,CAAEsB,OAAO,IAAKT,QAAQ,CAACU,OAAO,CAACD,OAAO,CAAC,CAAC;EACzD,CAAC,CAAC;AACH,CAAC,CAAC,C","sources":["webpack://mellobase/./src/blocks/app-screens/view.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n\tconst blocks = document.querySelectorAll('.wp-block-mellobase-app-screens');\n\n\tblocks.forEach((block) => {\n\t\tconst screens = block.querySelectorAll('.wp-block-mellobase-app-screens__screen');\n\t\tif (screens.length === 0) return;\n\n\t\t// Hide all screens except the first one using classes\n\t\tscreens.forEach((screen, index) => {\n\t\t\tscreen.classList.remove('is-active', 'is-inactive');\n\t\t\tif (index === 0) {\n\t\t\t\tscreen.classList.add('is-active');\n\t\t\t} else {\n\t\t\t\tscreen.classList.add('is-inactive');\n\t\t\t}\n\t\t});\n\n\t\t// Find sections with matching data-key attributes\n\t\tconst sections = document.querySelectorAll('[data-screen-key]');\n\t\tconst observerOptions = {\n\t\t\troot: null,\n\t\t\trootMargin: '0px 0px -50% 0px'\n\t\t};\n\n\t\tconst observer = new IntersectionObserver((entries) => {\n\t\t\tentries.forEach((entry) => {\n\t\t\t\tif (entry.isIntersecting) {\n\t\t\t\t\tconst key = entry.target.getAttribute('data-screen-key');\n\t\t\t\t\tscreens.forEach((screen) => {\n\t\t\t\t\t\tconst screenKey = screen.getAttribute('data-key');\n\t\t\t\t\t\tscreen.classList.remove('is-active', 'is-inactive');\n\t\t\t\t\t\tif(screenKey === key) {\n\t\t\t\t\t\t\tscreen.classList.add('is-active');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscreen.classList.add('is-inactive');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}, observerOptions);\n\n\t\tsections.forEach((section) => observer.observe(section));\n\t});\n});"],"names":["document","addEventListener","blocks","querySelectorAll","forEach","block","screens","length","screen","index","classList","remove","add","sections","observerOptions","root","rootMargin","observer","IntersectionObserver","entries","entry","isIntersecting","key","target","getAttribute","screenKey","section","observe"],"sourceRoot":""}